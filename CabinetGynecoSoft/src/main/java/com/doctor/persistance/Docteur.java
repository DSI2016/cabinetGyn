package com.doctor.persistance;

// Generated 18 aoï¿½t 2014 11:50:48 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

/**
 * Doctor generated by hbm2java
 */
public class Docteur implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((iddoctor == null) ? 0 : iddoctor.hashCode());
		result = prime * result
				+ ((libdoctor == null) ? 0 : libdoctor.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Docteur other = (Docteur) obj;
		if (iddoctor == null) {
			if (other.iddoctor != null)
				return false;
		} else if (!iddoctor.equals(other.iddoctor))
			return false;
		if (libdoctor == null) {
			if (other.libdoctor != null)
				return false;
		} else if (!libdoctor.equals(other.libdoctor))
			return false;
		return true;
	}

	private Integer iddoctor;
	private String libdoctor;

	private Set<Cfclient> cfclients = new HashSet<Cfclient>(0);

	public Docteur() {
	}

	public Docteur(String libdoctor) {
		this.libdoctor = libdoctor;
	}

	public Docteur(String libdoctor, Set<Cfclient> cfclients) {
		this.libdoctor = libdoctor;
		this.cfclients = cfclients;
	}

	public Integer getIddoctor() {
		return this.iddoctor;
	}

	public void setIddoctor(Integer iddoctor) {
		this.iddoctor = iddoctor;
	}

	public String getLibdoctor() {
		return this.libdoctor;
	}

	public void setLibdoctor(String libdoctor) {
		this.libdoctor = libdoctor;
	}

	public Set<Cfclient> getCfclients() {
		return this.cfclients;
	}

	public void setCfclients(Set<Cfclient> cfclients) {
		this.cfclients = cfclients;
	}

	@Override
	public String toString() {
		return "Docteur [iddoctor=" + iddoctor + ", libdoctor=" + libdoctor
				+ "]";
	}



}
